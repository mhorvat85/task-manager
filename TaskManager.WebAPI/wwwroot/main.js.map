{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cache-services/countries-cache.service.ts","./src/app/cache-services/employees-cache.service.ts","./src/app/cache-services/projects-cache.service.ts","./src/app/cache-services/tasks-cache.service.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/my-profile/my-profile.component.ts","./src/app/components/my-profile/my-profile.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/directives/alert.directive.ts","./src/app/directives/client-location-status-validator.directive.ts","./src/app/directives/component-loader.directive.ts","./src/app/directives/project-idunique-validator.directive.ts","./src/app/directives/team-size-validator.directive.ts","./src/app/guards/can-deactivate.guard.ts","./src/app/guards/logged-in.guard.ts","./src/app/interceptor-services/jwt-interceptor.service.ts","./src/app/interceptor-services/jwt-unauthorized-interceptor.service.ts","./src/app/pipes/filter.pipe.ts","./src/app/pipes/number-to-words.pipe.ts","./src/app/pipes/paging.pipe.ts","./src/app/pipes/sort.pipe.ts","./src/app/services/countries.service.ts","./src/app/services/custom-validators.service.ts","./src/app/services/login.service.ts","./src/app/services/projects.service.ts","./src/app/services/router-logger.service.ts","./src/app/shared/shared.module.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { MyProfileComponent } from './components/my-profile/my-profile.component';\r\nimport { loggedInGuard } from './guards/logged-in.guard';\r\nimport { canDeactivateGuard } from './guards/can-deactivate.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent, canActivate: [loggedInGuard] },\r\n  { path: 'signup', component: SignUpComponent, canActivate: [loggedInGuard], canDeactivate: [canDeactivateGuard] },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'myprofile', component: MyProfileComponent },\r\n  { path: 'admin', loadChildren: () => import('./admin/admin.module').then((m) => m.AdminModule) },\r\n  { path: 'employee', loadChildren: () => import('./employee/employee.module').then((m) => m.EmployeeModule) },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true, preloadingStrategy: PreloadAllModules })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { LoginService } from './services/login.service';\r\nimport { RouterLoggerService } from './services/router-logger.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    public loginService: LoginService,\r\n    private routerLoggerService: RouterLoggerService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginService.detectIfAlreadyLoggedIn();\r\n\r\n    this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        const userName = this.loginService.currentUserName ? this.loginService.currentUserName : 'anonymous';\r\n        const logMsg = `${new Date().toLocaleString()}: ${userName} navigates to ${event.url}`;\r\n        this.routerLoggerService.log(logMsg).subscribe();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-sm bg-success navbar-dark\">\r\n  <a class=\"navbar-brand mb-1\" href=\"#\"> Task Manager </a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mynav\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"mynav\">\r\n    <ul class=\"navbar-nav mr-auto ml-1\">\r\n      <ng-container *ngIf=\"loginService.currentUserName != null && loginService.currentUserRole == 'Admin'\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/admin', 'dashboard']\">Dashboard</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/admin', 'projects']\" [routerLinkActive]=\"['active']\">Projects</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/admin', 'masters']\" [routerLinkActive]=\"['active']\">Masters</a>\r\n        </li>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"loginService.currentUserName != null && loginService.currentUserRole == 'Employee'\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/employee', 'tasks']\" [routerLinkActive]=\"['active']\">Tasks</a>\r\n        </li>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"loginService.currentUserName == null\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/signup']\">Sign Up</a>\r\n        </li>\r\n      </ng-container>\r\n\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/about']\">About</a>\r\n      </li>\r\n    </ul>\r\n    <ul class=\"navbar-nav ml-1 mr-1\">\r\n      <ng-container *ngIf=\"loginService.currentUserName != null\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/myprofile']\">{{ loginService.currentUserName }}</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\" (click)=\"loginService.Logout()\">Logout</a>\r\n        </li>\r\n      </ng-container>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n<div class=\"container-fluid\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { MyProfileComponent } from './components/my-profile/my-profile.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { AlertDirective } from './directives/alert.directive';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { JwtInterceptorService } from './interceptor-services/jwt-interceptor.service';\r\nimport { JwtUnauthorizedInterceptorService } from './interceptor-services/jwt-unauthorized-interceptor.service';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, AboutComponent, MyProfileComponent, LoginComponent, SignUpComponent, AlertDirective],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: () => {\r\n          return sessionStorage.getItem('currentUser')\r\n            ? JSON.parse(sessionStorage.getItem('currentUser') as string).token\r\n            : null;\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JwtInterceptorService,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JwtUnauthorizedInterceptorService,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CountriesCacheService {\r\n  private cache: Map<string, any> = new Map();\r\n\r\n  set(key: string, data: any): void {\r\n    this.cache.set(key, data);\r\n  }\r\n\r\n  get(key: string): any {\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  clear(): void {\r\n    this.cache.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmployeesCacheService {\r\n  private cache: Map<string, any> = new Map();\r\n\r\n  set(key: string, data: any): void {\r\n    this.cache.set(key, data);\r\n  }\r\n\r\n  get(key: string): any {\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  clear(): void {\r\n    this.cache.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProjectsCacheService {\r\n  private cache: Map<string, any> = new Map();\r\n\r\n  set(key: string, data: any): void {\r\n    this.cache.set(key, data);\r\n  }\r\n\r\n  get(key: string): any {\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  clear(): void {\r\n    this.cache.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TasksCacheService {\r\n  private cache: Map<string, any> = new Map();\r\n\r\n  set(key: string, data: any): void {\r\n    this.cache.set(key, data);\r\n  }\r\n\r\n  get(key: string): any {\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  clear(): void {\r\n    this.cache.clear();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss'],\r\n})\r\nexport class AboutComponent {}\r\n","<p>about works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { take } from 'rxjs';\r\nimport { LoginViewModel } from '../../models/login-view-model';\r\nimport { LoginService } from '../../services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginViewModel = {} as LoginViewModel;\r\n  loginError: string;\r\n\r\n  @ViewChild('loginForm') loginForm: NgForm;\r\n\r\n  constructor(private loginService: LoginService, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onLoginClick() {\r\n    if (this.loginForm.valid) {\r\n      this.loginService\r\n        .Login(this.loginViewModel)\r\n        .pipe(take(1))\r\n        .subscribe({\r\n          next: () => {\r\n            if (this.loginService.currentUserRole == 'Admin') this.router.navigate(['/admin', 'dashboard']);\r\n            else this.router.navigate(['/employee', 'tasks']);\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n            this.loginError = 'Invalid Username or Password';\r\n          },\r\n        });\r\n    }\r\n  }\r\n}\r\n","<form #loginForm=\"ngForm\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\r\n      <div class=\"card mt-4\">\r\n        <div class=\"card-header bg-secondary text-white\">\r\n          <h3>Login</h3>\r\n          <div appAlert [error]=\"loginError\" *ngIf=\"loginError\"></div>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"form-group form-row\">\r\n            <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Username\"\r\n                autofocus=\"autofocus\"\r\n                name=\"UserName\"\r\n                [(ngModel)]=\"loginViewModel.userName\"\r\n                required=\"required\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                type=\"password\"\r\n                class=\"form-control\"\r\n                placeholder=\"Password\"\r\n                name=\"Password\"\r\n                [(ngModel)]=\"loginViewModel.password\"\r\n                required=\"required\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card-footer text-right\">\r\n          <button class=\"btn btn-primary\" (click)=\"onLoginClick()\">Login</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-my-profile',\r\n  templateUrl: './my-profile.component.html',\r\n  styleUrls: ['./my-profile.component.scss'],\r\n})\r\nexport class MyProfileComponent {\r\n  user: string = this.loginService.currentUserName.split('@')[0];\r\n\r\n  constructor(public loginService: LoginService) {}\r\n}\r\n","<p>{{ user }} works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, take } from 'rxjs';\r\nimport { Country } from '../../models/country';\r\nimport { CountriesService } from '../../services/countries.service';\r\nimport { CustomValidatorsService } from '../../services/custom-validators.service';\r\nimport { LoginService } from '../../services/login.service';\r\nimport { SignUpViewModel } from '../../models/sign-up-view-model';\r\n\r\n// enum Gender {\r\n//   Male = 'male',\r\n//   Female = 'female',\r\n// }\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss'],\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  signUpForm: FormGroup | any;\r\n  genders = ['male', 'female'];\r\n  // genders: Gender[];\r\n  // genders = Gender;\r\n  countries: Observable<Country[]>;\r\n  registerError: string;\r\n\r\n  constructor(\r\n    private countriesService: CountriesService,\r\n    private formBuilder: FormBuilder,\r\n    private customValidatorsService: CustomValidatorsService,\r\n    private loginService: LoginService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // this.genders = Object.values(Gender);\r\n\r\n    this.countries = this.countriesService.getCountries();\r\n\r\n    this.signUpForm = this.formBuilder.group(\r\n      {\r\n        personName: this.formBuilder.group(\r\n          {\r\n            firstName: [null, [Validators.required, Validators.minLength(2)]],\r\n            lastName: [null, [Validators.required, Validators.minLength(2)]],\r\n          },\r\n          { updateOn: 'blur' }\r\n        ),\r\n        email: [\r\n          null,\r\n          {\r\n            updateOn: 'blur',\r\n            validators: [Validators.required, Validators.email],\r\n            asyncValidators: [this.customValidatorsService.DuplicateEmailValidator()],\r\n          },\r\n        ],\r\n        mobile: [\r\n          null,\r\n          { updateOn: 'blur', validators: [Validators.required, Validators.pattern(/^(\\+\\d{1,3}[- ]?)?\\d{9,10}$/)] },\r\n        ],\r\n        dateOfBirth: [null, [Validators.required, this.customValidatorsService.minimumAgeValidator(18)]],\r\n        password: [\r\n          null,\r\n          { updateOn: 'blur', validators: [Validators.required, Validators.minLength(5), Validators.maxLength(20)] },\r\n        ],\r\n        confirmPassword: [null, [Validators.required]],\r\n        gender: [null, [Validators.required]],\r\n        countryID: [null, [Validators.required]],\r\n        receiveNewsLetters: false,\r\n        skills: this.formBuilder.array([]),\r\n      },\r\n      {\r\n        validators: [this.customValidatorsService.compareValidator('confirmPassword', 'password')],\r\n      }\r\n    );\r\n  }\r\n\r\n  onSubmitClick() {\r\n    this.signUpForm['submitted'] = true;\r\n\r\n    if (this.signUpForm.valid) {\r\n      const signUpViewModel = this.signUpForm.value as SignUpViewModel;\r\n      this.loginService\r\n        .Register(signUpViewModel)\r\n        .pipe(take(1))\r\n        .subscribe({\r\n          next: () => {\r\n            console.log('Hello');\r\n            this.router.navigate(['/employee', 'tasks']);\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n            this.registerError = 'Unable to submit';\r\n          },\r\n        });\r\n    }\r\n  }\r\n\r\n  onAddSkill() {\r\n    const formGroup = new FormGroup({\r\n      skillName: new FormControl(null, [Validators.required]),\r\n      skillLevel: new FormControl(null, [Validators.required]),\r\n    });\r\n\r\n    (<FormArray>this.signUpForm.get('skills')).push(formGroup);\r\n  }\r\n\r\n  onRemoveSkill(index: number) {\r\n    (<FormArray>this.signUpForm.get('skills')).removeAt(index);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-8 col-xl-6 mx-auto\">\r\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmitClick()\" spellcheck=\"false\">\r\n      <div class=\"card mt-1\">\r\n        <div class=\"card-header\">\r\n          <h4>Sign Up</h4>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\r\n            <label for=\"firstName\" class=\"col-md-4 col-form-label\">First Name:</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                id=\"firstName\"\r\n                placeholder=\"First Name\"\r\n                autocomplete=\"off\"\r\n                class=\"form-control\"\r\n                formControlName=\"firstName\"\r\n                [ngClass]=\"{\r\n                  'is-invalid':\r\n                    signUpForm.get('personName.firstName').invalid &&\r\n                    (signUpForm.get('personName.firstName').dirty ||\r\n                      signUpForm.get('personName.firstName').touched ||\r\n                      signUpForm.submitted),\r\n                  'is-valid':\r\n                    signUpForm.get('personName.firstName').valid &&\r\n                    (signUpForm.get('personName.firstName').dirty ||\r\n                      signUpForm.get('personName.firstName').touched ||\r\n                      signUpForm.submitted)\r\n                }\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('personName.firstName').invalid &&\r\n                  (signUpForm.get('personName.firstName').dirty ||\r\n                    signUpForm.get('personName.firstName').touched ||\r\n                    signUpForm.submitted) &&\r\n                  signUpForm.get('personName.firstName').errors?.required\r\n                \"\r\n                >First name can't be blank</span\r\n              >\r\n\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('personName.firstName').invalid &&\r\n                  (signUpForm.get('personName.firstName').dirty ||\r\n                    signUpForm.get('personName.firstName').touched ||\r\n                    signUpForm.submitted) &&\r\n                  signUpForm.get('personName.firstName').errors?.minlength\r\n                \"\r\n                >First name should contain at least 2 characters</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\" formGroupName=\"personName\">\r\n            <label for=\"lastName\" class=\"col-md-4 col-form-label\">Last Name:</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                id=\"lastName\"\r\n                placeholder=\"Last Name\"\r\n                autocomplete=\"off\"\r\n                class=\"form-control\"\r\n                formControlName=\"lastName\"\r\n                [ngClass]=\"{\r\n                  'is-invalid':\r\n                    signUpForm.get('personName.lastName').invalid &&\r\n                    (signUpForm.get('personName.lastName').dirty ||\r\n                      signUpForm.get('personName.lastName').touched ||\r\n                      signUpForm.submitted),\r\n                  'is-valid':\r\n                    signUpForm.get('personName.lastName').valid &&\r\n                    (signUpForm.get('personName.lastName').dirty ||\r\n                      signUpForm.get('personName.lastName').touched ||\r\n                      signUpForm.submitted)\r\n                }\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('personName.lastName').invalid &&\r\n                  (signUpForm.get('personName.lastName').dirty ||\r\n                    signUpForm.get('personName.lastName').touched ||\r\n                    signUpForm.submitted) &&\r\n                  signUpForm.get('personName.lastName').errors?.required\r\n                \"\r\n                >Last name can't be blank</span\r\n              >\r\n\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('personName.lastName').invalid &&\r\n                  (signUpForm.get('personName.lastName').dirty ||\r\n                    signUpForm.get('personName.lastName').touched ||\r\n                    signUpForm.submitted) &&\r\n                  signUpForm.get('personName.lastName').errors?.minlength\r\n                \"\r\n                >Last name should contain at least 2 characters</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label for=\"email\" class=\"col-md-4 col-form-label\">Email:</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Email\"\r\n                autocomplete=\"off\"\r\n                class=\"form-control\"\r\n                formControlName=\"email\"\r\n                [ngClass]=\"{\r\n                  'is-invalid':\r\n                    signUpForm.get('email').invalid &&\r\n                    (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted),\r\n                  'is-valid':\r\n                    signUpForm.get('email').valid &&\r\n                    (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted)\r\n                }\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('email').invalid &&\r\n                  (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) &&\r\n                  signUpForm.get('email').errors?.required\r\n                \"\r\n                >Email can't be blank</span\r\n              >\r\n\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('email').invalid &&\r\n                  (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) &&\r\n                  signUpForm.get('email').errors?.email\r\n                \"\r\n                >Email is invalid</span\r\n              >\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('email').invalid &&\r\n                  (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) &&\r\n                  signUpForm.get('email').errors?.uniqueEmail\r\n                \"\r\n                >Email already exists</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label for=\"mobile\" class=\"col-md-4 col-form-label\">Mobile:</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"mobile\"\r\n                id=\"mobile\"\r\n                placeholder=\"Mobile\"\r\n                autocomplete=\"off\"\r\n                class=\"form-control\"\r\n                formControlName=\"mobile\"\r\n                [ngClass]=\"{\r\n                  'is-invalid':\r\n                    signUpForm.get('mobile').invalid &&\r\n                    (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted),\r\n                  'is-valid':\r\n                    signUpForm.get('mobile').valid &&\r\n                    (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted)\r\n                }\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('mobile').invalid &&\r\n                  (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) &&\r\n                  signUpForm.get('mobile').errors?.required\r\n                \"\r\n                >Mobile can't be blank</span\r\n              >\r\n\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('mobile').invalid &&\r\n                  (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) &&\r\n                  signUpForm.get('mobile').errors?.pattern\r\n                \"\r\n                >Mobile is invalid</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Date of Birth:</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                type=\"date\"\r\n                name=\"dateOfBirth\"\r\n                id=\"dateOfBirth\"\r\n                placeholder=\"Date of Birth\"\r\n                class=\"form-control\"\r\n                formControlName=\"dateOfBirth\"\r\n                [ngClass]=\"{\r\n                  'is-invalid':\r\n                    signUpForm.get('dateOfBirth').invalid &&\r\n                    (signUpForm.get('dateOfBirth').dirty ||\r\n                      signUpForm.get('dateOfBirth').touched ||\r\n                      signUpForm.submitted),\r\n                  'is-valid':\r\n                    signUpForm.get('dateOfBirth').valid &&\r\n                    (signUpForm.get('dateOfBirth').dirty ||\r\n                      signUpForm.get('dateOfBirth').touched ||\r\n                      signUpForm.submitted)\r\n                }\"\r\n              />\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('dateOfBirth').invalid &&\r\n                  (signUpForm.get('dateOfBirth').dirty ||\r\n                    signUpForm.get('dateOfBirth').touched ||\r\n                    signUpForm.submitted) &&\r\n                  signUpForm.get('dateOfBirth').errors?.required\r\n                \"\r\n                >Date of Birth can't be blank</span\r\n              >\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('dateOfBirth').invalid &&\r\n                  (signUpForm.get('dateOfBirth').dirty ||\r\n                    signUpForm.get('dateOfBirth').touched ||\r\n                    signUpForm.submitted) &&\r\n                  signUpForm.get('dateOfBirth').errors?.minAge\r\n                \"\r\n                >Minimum Age must be 18</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label for=\"password\" class=\"col-md-4 col-form-label\">Password:</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                class=\"form-control\"\r\n                formControlName=\"password\"\r\n                [ngClass]=\"{\r\n                  'is-invalid':\r\n                    signUpForm.get('password').invalid &&\r\n                    (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted),\r\n\r\n                  'is-valid':\r\n                    signUpForm.get('password').valid &&\r\n                    (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted)\r\n                }\"\r\n              />\r\n\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('password').invalid &&\r\n                  (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) &&\r\n                  signUpForm.get('password').errors?.required\r\n                \"\r\n                >Password can't be blank</span\r\n              >\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('password').invalid &&\r\n                  (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) &&\r\n                  (signUpForm.get('password').errors?.minlength || signUpForm.get('password').errors?.maxlength)\r\n                \"\r\n                >Password must contain 5-20 characters</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label for=\"confirmPassword\" class=\"col-md-4 col-form-label\">Confirm Password:</label>\r\n            <div class=\"col-md-8\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                id=\"confirmPassword\"\r\n                placeholder=\"Confirm Password\"\r\n                class=\"form-control\"\r\n                formControlName=\"confirmPassword\"\r\n                [ngClass]=\"{\r\n                  'is-invalid':\r\n                    signUpForm.get('confirmPassword').invalid &&\r\n                    (signUpForm.get('confirmPassword').dirty ||\r\n                      signUpForm.get('confirmPassword').touched ||\r\n                      signUpForm.submitted),\r\n\r\n                  'is-valid':\r\n                    signUpForm.get('confirmPassword').valid &&\r\n                    (signUpForm.get('confirmPassword').dirty ||\r\n                      signUpForm.get('confirmPassword').touched ||\r\n                      signUpForm.submitted)\r\n                }\"\r\n              />\r\n\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('confirmPassword').invalid &&\r\n                  (signUpForm.get('confirmPassword').dirty ||\r\n                    signUpForm.get('confirmPassword').touched ||\r\n                    signUpForm.submitted) &&\r\n                  signUpForm.get('confirmPassword').errors?.required\r\n                \"\r\n                >Confirm Password can't be blank</span\r\n              >\r\n\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.invalid &&\r\n                  (signUpForm.dirty || signUpForm.touched || signUpForm.submitted) &&\r\n                  signUpForm.errors?.compareValidator\r\n                \"\r\n                >Password and Confirm Password do not match</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label class=\"col-md-4 col-form-label\">Gender:</label>\r\n            <div class=\"col-md-8 mt-2\">\r\n              <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  [id]=\"gender\"\r\n                  [value]=\"gender\"\r\n                  class=\"form-check-input\"\r\n                  formControlName=\"gender\"\r\n                />\r\n                <label [for]=\"gender\" class=\"form-check-label\">{{ gender }}</label>\r\n              </div>\r\n              <!-- <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders | keyvalue\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  [id]=\"gender.key\"\r\n                  [value]=\"gender.value\"\r\n                  class=\"form-check-input\"\r\n                  formControlName=\"gender\"\r\n                />\r\n                <label [for]=\"gender.key\" class=\"form-check-label\">{{ gender.value }}</label>\r\n              </div> -->\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('gender').invalid &&\r\n                  (signUpForm.get('gender').dirty || signUpForm.get('gender').touched || signUpForm.submitted) &&\r\n                  signUpForm.get('gender').errors?.required\r\n                \"\r\n                >Please select gender</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label for=\"countryID\" class=\"col-md-4 col-form-label\">Country:</label>\r\n            <div class=\"col-md-8\">\r\n              <select\r\n                name=\"countryID\"\r\n                id=\"countryID\"\r\n                class=\"form-control\"\r\n                formControlName=\"countryID\"\r\n                [ngClass]=\"{\r\n                  'is-invalid':\r\n                    signUpForm.get('countryID').invalid &&\r\n                    (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted),\r\n                  'is-valid':\r\n                    signUpForm.get('countryID').valid &&\r\n                    (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted)\r\n                }\"\r\n              >\r\n                <option value=\"null\" disabled selected hidden>Please Select</option>\r\n                <option *ngFor=\"let country of countries | async\" [value]=\"country.countryID\">\r\n                  {{ country.countryName }}\r\n                </option>\r\n              </select>\r\n              <span\r\n                class=\"text-danger\"\r\n                *ngIf=\"\r\n                  signUpForm.get('countryID').invalid &&\r\n                  (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) &&\r\n                  signUpForm.get('countryID').errors?.required\r\n                \"\r\n                >Please select country</span\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label class=\"col-md-4 col-form-label\"></label>\r\n            <div class=\"col-md-8\">\r\n              <label for=\"receiveNewsLetters\" class=\"mr-4\">Receive News Letters</label>&nbsp;\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"receiveNewsLetters\"\r\n                id=\"receiveNewsLetters\"\r\n                class=\"form-check-input mb-1\"\r\n                formControlName=\"receiveNewsLetters\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group form-row\">\r\n            <label class=\"col-md-4 col-form-label\">Skills:</label>\r\n            <div class=\"col-md-8\" formArrayName=\"skills\">\r\n              <div\r\n                class=\"row mb-1\"\r\n                *ngFor=\"let skill of signUpForm.get('skills').controls; let i = index\"\r\n                [formGroupName]=\"i\"\r\n              >\r\n                <div class=\"col-5\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"skillName\"\r\n                    id=\"skillName\"\r\n                    placeholder=\"Skill Name\"\r\n                    formControlName=\"skillName\"\r\n                    class=\"form-control\"\r\n                    [ngClass]=\"{\r\n                      'is-invalid':\r\n                        skill.get('skillName').invalid &&\r\n                        (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted),\r\n\r\n                      'is-valid':\r\n                        skill.get('skillName').valid &&\r\n                        (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted)\r\n                    }\"\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"col-4\">\r\n                  <select\r\n                    name=\"skillLevel\"\r\n                    id=\"skillLevel\"\r\n                    formControlName=\"skillLevel\"\r\n                    class=\"form-control\"\r\n                    [ngClass]=\"{\r\n                      'is-invalid':\r\n                        skill.get('skillLevel').invalid &&\r\n                        (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted),\r\n\r\n                      'is-valid':\r\n                        skill.get('skillLevel').valid &&\r\n                        (skill.get('skillLevel').dirty || skill.get('skillLevel').touched || signUpForm.submitted)\r\n                    }\"\r\n                  >\r\n                    <option value=\"null\">Please Select</option>\r\n                    <option value=\"Beginner\">Beginner</option>\r\n                    <option value=\"Intermediate\">Intermediate</option>\r\n                    <option value=\"Professional\">Professional</option>\r\n                    <option value=\"Expert\">Expert</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"col-3\">\r\n                  <button class=\"btn btn-danger\" type=\"button\" (click)=\"onRemoveSkill(i)\">Remove</button>\r\n                </div>\r\n              </div>\r\n\r\n              <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddSkill()\">Add Skill</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card-footer\">\r\n          <button class=\"btn btn-success float-right\">Create Account</button>\r\n          <div class=\"text-danger\">{{ registerError }}</div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <div>{{ signUpForm.value | json }}</div>\r\n  </div>\r\n</div>\r\n","import { Directive, ElementRef, HostBinding, HostListener, Input, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAlert]',\r\n})\r\nexport class AlertDirective {\r\n  @Input('error') error: string;\r\n  @HostBinding('title') title: string;\r\n\r\n  constructor(private elementRef: ElementRef, private renderer2: Renderer2) {}\r\n\r\n  divElement: any;\r\n  spanElement: any;\r\n  spanText: any;\r\n\r\n  ngOnInit() {\r\n    /* div */\r\n    this.divElement = this.renderer2.createElement('div');\r\n    this.renderer2.setAttribute(this.divElement, 'role', 'alert');\r\n    this.renderer2.setAttribute(this.divElement, 'class', 'alert alert-danger fade show');\r\n    this.renderer2.setStyle(this.divElement, 'transition', 'transform 0.5s');\r\n\r\n    /* span */\r\n    this.spanElement = this.renderer2.createElement('span');\r\n    this.renderer2.setAttribute(this.spanElement, 'class', 'message');\r\n\r\n    /* span-node */\r\n    this.spanText = this.renderer2.createText(this.error);\r\n    this.renderer2.appendChild(this.spanElement, this.spanText);\r\n\r\n    /* div-span */\r\n    this.renderer2.appendChild(this.divElement, this.spanElement);\r\n\r\n    this.elementRef.nativeElement.appendChild(this.divElement);\r\n\r\n    this.title = 'Please try again!';\r\n  }\r\n\r\n  @HostListener('mouseenter', ['$event'])\r\n  onMouseEnter(event: any) {\r\n    this.renderer2.setStyle(this.divElement, 'transform', 'scale(1.1)');\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event'])\r\n  onMouseLeave() {\r\n    this.renderer2.setStyle(this.divElement, 'transform', 'scale(1)');\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appClientLocationStatusValidator]',\r\n  providers: [{ provide: NG_VALIDATORS, useExisting: ClientLocationStatusValidatorDirective, multi: true }],\r\n})\r\nexport class ClientLocationStatusValidatorDirective implements Validator {\r\n  constructor() {}\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    let isValid = true;\r\n\r\n    if (control.value.clientLocationID == 1 && control.value.status == 'Support') {\r\n      isValid = false;\r\n    }\r\n\r\n    if (isValid == true) {\r\n      return null;\r\n    } else {\r\n      return { clientLocationStatus: { valid: false } };\r\n    }\r\n  }\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appComponentLoader]',\r\n})\r\nexport class ComponentLoaderDirective {\r\n  constructor(public viewContainerRef: ViewContainerRef) {}\r\n}\r\n","import { Directive } from '@angular/core';\r\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\r\nimport { Observable, map } from 'rxjs';\r\nimport { ProjectsService } from '../services/projects.service';\r\nimport { Project } from '../models/project';\r\n\r\n@Directive({\r\n  selector: '[appProjectIDUniqueValidator]',\r\n  providers: [{ provide: NG_ASYNC_VALIDATORS, useExisting: ProjectIDUniqueValidatorDirective, multi: true }],\r\n})\r\nexport class ProjectIDUniqueValidatorDirective implements AsyncValidator {\r\n  constructor(private projectsService: ProjectsService) {}\r\n\r\n  validate(control: AbstractControl): Observable<ValidationErrors | null> {\r\n    return this.projectsService.getProjectByProjectID(control.value).pipe(\r\n      map((projectExists: Project) => {\r\n        if (projectExists) {\r\n          return { uniqueProjectID: { valid: false } };\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appTeamSizeValidator]',\r\n  providers: [{ provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true }],\r\n})\r\nexport class TeamSizeValidatorDirective implements Validator {\r\n  constructor() {}\r\n\r\n  @Input() appTeamSizeValidator: number;\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    const currentValue = control.value;\r\n    const isValid = currentValue % this.appTeamSizeValidator == 0;\r\n\r\n    if (isValid) {\r\n      return null;\r\n    } else {\r\n      return { divisible: { valid: false } };\r\n    }\r\n  }\r\n}\r\n","import { CanActivateFn } from '@angular/router';\r\n\r\nexport const canDeactivateGuard: CanActivateFn = (route: any, state) => {\r\n  if (route.signUpForm.pristine || route.signUpForm.status == 'VALID') {\r\n    return true;\r\n  } else {\r\n    return confirm('Do you want to discard changes?');\r\n  }\r\n};\r\n","import { inject } from '@angular/core';\r\nimport { CanActivateFn } from '@angular/router';\r\nimport { LoginService } from '../services/login.service';\r\n\r\nexport const loggedInGuard: CanActivateFn = () => {\r\n  if (inject(LoginService).isAuthenticated()) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JwtInterceptorService implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  //invoked with every request\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let currentUser = { token: '' };\r\n    if (sessionStorage['currentUser'] != null) {\r\n      currentUser = JSON.parse(sessionStorage['currentUser']);\r\n    }\r\n\r\n    //we cannot modify request obj directly\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${currentUser.token}`,\r\n      },\r\n    });\r\n    if (request.body?.teamSize == '') {\r\n      request.body.teamSize = null;\r\n    }\r\n\r\n    //invokes the next interceptor if any otherwise invokes HttpXhrBackend(then the actual request will be sent to server)\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import {\r\n  HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, tap } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JwtUnauthorizedInterceptorService implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    //by pipe we are catching success or error response\r\n    return next.handle(req).pipe(\r\n      tap({\r\n        next: (event: HttpEvent<any>) => {\r\n          if (event instanceof HttpResponse) {\r\n            //do something with response\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          if (error instanceof HttpErrorResponse) {\r\n            if (error.status === 401) {\r\n              console.log(error);\r\n              alert('401 Unauthorized');\r\n            } else {\r\n              console.log(error);\r\n            }\r\n          }\r\n        },\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter',\r\n  pure: false,\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(value: any[], searchBy: string, searchText: string): any {\r\n    if (value == null) return null;\r\n\r\n    const resultArray = [];\r\n\r\n    if (!searchText) {\r\n      for (const item of value) resultArray.push(item);\r\n      return resultArray;\r\n    }\r\n\r\n    for (const item of value) {\r\n      if (\r\n        (searchBy == 'countryName' || searchBy == 'clientLocationName') &&\r\n        String(item[searchBy]).toLowerCase().startsWith(searchText?.toLowerCase())\r\n      ) {\r\n        resultArray.push(item);\r\n      } else if (\r\n        searchBy == 'dateOfStart' &&\r\n        String(item[searchBy]).toLowerCase().indexOf(searchText?.toLowerCase()) >= 0\r\n      ) {\r\n        resultArray.push(item);\r\n      } else if (\r\n        searchBy != 'countryName' &&\r\n        searchBy != 'clientLocationName' &&\r\n        searchBy != 'dateOfStart' &&\r\n        String(item[searchBy])\r\n          .toLowerCase()\r\n          .split(' ')\r\n          .map((w: string) => w.startsWith(searchText?.toLowerCase()))\r\n          .includes(true)\r\n      ) {\r\n        resultArray.push(item);\r\n      }\r\n    }\r\n\r\n    return resultArray;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'numberToWords',\r\n})\r\nexport class NumberToWordsPipe implements PipeTransform {\r\n  transform(value: any, ...separators: any[]): any {\r\n    if (value == null) {\r\n      return null;\r\n    } else {\r\n      return this.inWords(value /* , separators[0] */);\r\n    }\r\n  }\r\n\r\n  private inWords = (n: any /* , separator: any */): any => {\r\n    const a = [\r\n      '',\r\n      'One',\r\n      'Two',\r\n      'Three',\r\n      'Four',\r\n      'Five',\r\n      'Six',\r\n      'Seven',\r\n      'Eight',\r\n      'Nine',\r\n      'Ten',\r\n      'Eleven',\r\n      'Twelve',\r\n      'Thirteen',\r\n      'Fourteen',\r\n      'Fifteen',\r\n      'Sixteen',\r\n      'Seventeen',\r\n      'Eighteen',\r\n      'Nineteen',\r\n    ];\r\n\r\n    const b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\n\r\n    const g = [\r\n      '',\r\n      'Thousand',\r\n      'Million',\r\n      'Billion',\r\n      'Trillion',\r\n      'Quadrillion',\r\n      'Quintillion',\r\n      'Sextillion',\r\n      'Septillion',\r\n      'Octillion',\r\n      'Nonillion',\r\n    ];\r\n\r\n    const arr = (x: any) => {\r\n      return Array.from(x);\r\n    };\r\n    const num = (x: any) => Number(x) || 0;\r\n    const str = (x: any) => String(x);\r\n    const isEmpty = (xs: any) => xs.length === 0;\r\n    const take = (n: any) => (xs: any) => xs.slice(0, n);\r\n    const drop = (n: any) => (xs: any) => xs.slice(n);\r\n    const reverse = (xs: any) => {\r\n      return xs.slice(0).reverse();\r\n    };\r\n    const comp = (f: any) => (g: any) => (x: any) => f(g(x));\r\n    const not = (x: any) => !x;\r\n    const chunk =\r\n      (n: any): any =>\r\n      (xs: any): any => {\r\n        return isEmpty(xs) ? [] : [take(n)(xs), ...chunk(n)(drop(n)(xs))];\r\n      };\r\n\r\n    const makeGroup = ([ones, tens, huns]: any) => {\r\n      return [\r\n        num(huns) === 0 ? '' : a[huns] + ' Hundred ',\r\n        num(ones) === 0 ? b[tens] : (b[tens] && b[tens] + '-') || '',\r\n        a[tens + ones] || a[ones],\r\n      ].join('');\r\n    };\r\n\r\n    const thousand = (group: any, i: any) => (group === '' ? group : `${group} ${g[i]}`);\r\n\r\n    if (typeof n === 'number') return this.inWords(str(n) /* , separator */);\r\n    else if (n === '0') return 'Zero';\r\n    else {\r\n      return comp(chunk(3))(reverse)(arr(n))\r\n        .map(makeGroup)\r\n        .map(thousand)\r\n        .filter(comp(not)(isEmpty))\r\n        .reverse()\r\n        .join(/* separator */ ' and ')\r\n        .trim();\r\n    }\r\n  };\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Project } from '../models/project';\r\n\r\n@Pipe({\r\n  name: 'paging',\r\n})\r\nexport class PagingPipe implements PipeTransform {\r\n  transform(value: Project[], currentPageIndex: number, pageSize: number): any {\r\n    if (value == null) return null;\r\n\r\n    const resultArray = [];\r\n    for (let i = currentPageIndex * pageSize; i < (currentPageIndex + 1) * pageSize; i++) {\r\n      if (value[i]) {\r\n        resultArray.push(value[i]);\r\n      }\r\n    }\r\n    return resultArray;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'sort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(value: any[], sortBy: string, sortOrder: string): any {\r\n    if (value == null) return null;\r\n\r\n    value.sort(function (a, b) {\r\n      if (a[sortBy] && b[sortBy]) {\r\n        return a[sortBy].toString().toLowerCase()[0] - b[sortBy].toString().toLowerCase()[0];\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n\r\n    if (sortOrder == 'DESC') {\r\n      value.reverse();\r\n    }\r\n\r\n    return value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of, tap } from 'rxjs';\r\nimport { Country } from '../models/country';\r\nimport { CountriesCacheService } from '../cache-services/countries-cache.service';\r\n\r\nconst API_BASE_URL = 'https://localhost:7036';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CountriesService {\r\n  constructor(private httpClient: HttpClient, private cacheService: CountriesCacheService) {}\r\n\r\n  getCountries(): Observable<Country[]> {\r\n    const cachedData = this.cacheService.get('cachedData');\r\n    if (cachedData) {\r\n      return of(cachedData);\r\n    } else {\r\n      return this.httpClient.get<Country[]>(`${API_BASE_URL}/api/countries`, { responseType: 'json' }).pipe(\r\n        tap((data) => {\r\n          this.cacheService.set('cachedData', data);\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  getCountryByCountryID(countryID: number): Observable<Country> {\r\n    return this.httpClient.get<Country>(`${API_BASE_URL}/api/countries/searchbycountryid/${countryID}`, {\r\n      responseType: 'json',\r\n    });\r\n  }\r\n\r\n  insertCountry(newCountry: Country): Observable<Country> {\r\n    return this.httpClient.post<Country>(`${API_BASE_URL}/api/countries`, newCountry, {\r\n      responseType: 'json',\r\n    });\r\n  }\r\n\r\n  updateCountry(existingCountry: Country): Observable<Country> {\r\n    return this.httpClient.put<Country>(`${API_BASE_URL}/api/countries`, existingCountry, {\r\n      responseType: 'json',\r\n    });\r\n  }\r\n\r\n  deleteCountry(countryID: number): Observable<string> {\r\n    return this.httpClient.delete<string>(`${API_BASE_URL}/api/countries/${countryID}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { Observable, map } from 'rxjs';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CustomValidatorsService {\r\n  constructor(private loginService: LoginService) {}\r\n\r\n  public minimumAgeValidator(minAge: number): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      if (!control.value) return null;\r\n\r\n      const today = new Date();\r\n      const dateOfBirth = new Date(control.value);\r\n      const diffMilliSeconds = today.getTime() - dateOfBirth.getTime();\r\n      const diffYears = diffMilliSeconds / (1000 * 60 * 60 * 24) / 365.25;\r\n\r\n      if (diffYears >= minAge) return null;\r\n      else return { minAge: { valid: false } };\r\n    };\r\n  }\r\n\r\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      if (!(control.get(controlToValidate) as FormControl).value) return null;\r\n\r\n      if ((control.get(controlToValidate) as FormControl).value == (control.get(controlToCompare) as any).value)\r\n        return null;\r\n      else {\r\n        (control.get(controlToValidate) as FormControl).setErrors({ compareValidator: { valid: false } });\r\n        return { compareValidator: { valid: false } };\r\n      }\r\n    };\r\n  }\r\n\r\n  public DuplicateEmailValidator(): AsyncValidatorFn {\r\n    return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n      return this.loginService.getUserByEmail(control.value).pipe(\r\n        map((existingUser: boolean) => {\r\n          if (existingUser) {\r\n            return { uniqueEmail: { valid: false } };\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n      );\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpBackend, HttpClient } from '@angular/common/http';\r\nimport { Observable, map, of, tap } from 'rxjs';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { LoginViewModel } from '../models/login-view-model';\r\nimport { SignUpViewModel } from '../models/sign-up-view-model';\r\nimport { EmployeesCacheService } from '../cache-services/employees-cache.service';\r\nimport { TasksCacheService } from '../cache-services/tasks-cache.service';\r\n\r\nconst API_BASE_URL = 'https://localhost:7036';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService {\r\n  private httpClient: HttpClient;\r\n\r\n  constructor(\r\n    private httpBackend: HttpBackend,\r\n    private jwtHelperService: JwtHelperService,\r\n    private employeesCacheService: EmployeesCacheService,\r\n    private tasksCacheService: TasksCacheService\r\n  ) {}\r\n\r\n  currentUserName: string | any;\r\n  currentUserRole: string | any;\r\n\r\n  public Login(loginViewModel: LoginViewModel): Observable<any> {\r\n    this.httpClient = new HttpClient(this.httpBackend);\r\n\r\n    return this.httpClient\r\n      .post<any>(`${API_BASE_URL}/authenticate`, loginViewModel, { responseType: 'json', observe: 'response' })\r\n      .pipe(\r\n        map((response) => {\r\n          if (response) {\r\n            this.currentUserName = response.body.userName;\r\n            this.currentUserRole = response.body.role;\r\n            sessionStorage['currentUser'] = JSON.stringify(response.body);\r\n          }\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  public detectIfAlreadyLoggedIn() {\r\n    if (this.jwtHelperService.isTokenExpired() == false) {\r\n      const currentUser = JSON.parse(sessionStorage['currentUser']);\r\n      this.currentUserName = currentUser.userName;\r\n      this.currentUserRole = currentUser.role;\r\n    }\r\n  }\r\n\r\n  public Register(signUpViewModel: SignUpViewModel): Observable<any> {\r\n    this.httpClient = new HttpClient(this.httpBackend);\r\n\r\n    return this.httpClient\r\n      .post<any>(`${API_BASE_URL}/register`, signUpViewModel, { responseType: 'json', observe: 'response' })\r\n      .pipe(\r\n        map((response) => {\r\n          if (response) {\r\n            this.employeesCacheService.clear();\r\n            this.currentUserName = response.body.userName;\r\n            this.currentUserRole = response.body.role;\r\n            sessionStorage['currentUser'] = JSON.stringify(response.body);\r\n          }\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  getUserByEmail(email: string): Observable<boolean> {\r\n    this.httpClient = new HttpClient(this.httpBackend);\r\n    return this.httpClient.get<boolean>(`${API_BASE_URL}/api/getuserbyemail/${email}`, { responseType: 'json' });\r\n  }\r\n\r\n  public Logout() {\r\n    this.currentUserName = null;\r\n    this.currentUserRole = null;\r\n    sessionStorage.removeItem('currentUser');\r\n    this.tasksCacheService.clear();\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n    if (this.jwtHelperService.isTokenExpired()) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public getEmployees(): Observable<any> {\r\n    const cachedData = this.employeesCacheService.get('cachedData');\r\n    if (cachedData) {\r\n      return of(cachedData);\r\n    } else {\r\n      this.httpClient = new HttpClient(this.httpBackend);\r\n      return this.httpClient.get<any>(`${API_BASE_URL}/api/getallemployees`, { responseType: 'json' }).pipe(\r\n        tap((data) => {\r\n          this.employeesCacheService.set('cachedData', data);\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of, tap } from 'rxjs';\r\nimport { Project } from '../models/project';\r\nimport { ProjectsCacheService } from '../cache-services/projects-cache.service';\r\n\r\nconst API_BASE_URL = 'https://localhost:7036';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProjectsService {\r\n  constructor(private httpClient: HttpClient, private cacheService: ProjectsCacheService) {}\r\n\r\n  getProjects(): Observable<Project[]> {\r\n    const cachedData = this.cacheService.get('cachedData');\r\n    if (cachedData) {\r\n      return of(cachedData);\r\n    } else {\r\n      return this.httpClient\r\n        .get<Project[]>(`${API_BASE_URL}/api/projects`, {\r\n          responseType: 'json',\r\n        })\r\n        .pipe(\r\n          tap((data) => {\r\n            this.cacheService.set('cachedData', data);\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  getProjectByProjectID(projectID: number): Observable<Project> {\r\n    const cachedData = this.cacheService.get('cachedData');\r\n    if (cachedData) {\r\n      return of(cachedData.filter((el: any) => el.projectID == projectID)[0]);\r\n    } else {\r\n      return this.httpClient.get<Project>(`${API_BASE_URL}/api/projects/searchbyprojectid/${projectID}`, {\r\n        responseType: 'json',\r\n      });\r\n    }\r\n  }\r\n\r\n  searchProjects(searchBy: string, searchText: string | any): Observable<Project[]> {\r\n    const cachedData = this.cacheService.get('cachedData');\r\n    if (cachedData) {\r\n      let filteredCache = cachedData;\r\n      switch (searchBy) {\r\n        case 'projectID':\r\n          filteredCache = cachedData.filter((el: any) => el.projectID.toString() == searchText);\r\n          break;\r\n        case 'projectName':\r\n          filteredCache = cachedData.filter((el: any) => el.projectName.toLowerCase().includes(searchText));\r\n          break;\r\n        case 'dateOfStart':\r\n          filteredCache = cachedData.filter((el: any) => el.dateOfStart.includes(searchText));\r\n          break;\r\n        case 'teamSize':\r\n          filteredCache = cachedData.filter((el: any) => el.teamSize.toString().includes(searchText));\r\n          break;\r\n        default:\r\n          filteredCache;\r\n      }\r\n      return of(filteredCache);\r\n    } else {\r\n      return this.httpClient.get<Project[]>(`${API_BASE_URL}/api/projects/search/${searchBy}/${searchText}`, {\r\n        responseType: 'json',\r\n      });\r\n    }\r\n  }\r\n\r\n  insertProject(newProject: Project): Observable<Project> {\r\n    return this.httpClient.post<Project>(`${API_BASE_URL}/api/projects`, newProject, {\r\n      responseType: 'json',\r\n    });\r\n  }\r\n\r\n  updateProject(existingProject: Project): Observable<Project> {\r\n    return this.httpClient.put<Project>(`${API_BASE_URL}/api/projects`, existingProject, {\r\n      responseType: 'json',\r\n    });\r\n  }\r\n\r\n  deleteProject(projectID: number): Observable<string> {\r\n    return this.httpClient.delete<string>(`${API_BASE_URL}/api/projects/${projectID}`);\r\n  }\r\n}\r\n","import { HttpBackend, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_BASE_URL = 'https://localhost:7036';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RouterLoggerService {\r\n  private httpClient: HttpClient;\r\n  currentUserName: string;\r\n\r\n  constructor(private httpBackend: HttpBackend) {}\r\n\r\n  public log(logMsg: string): Observable<any> {\r\n    this.httpClient = new HttpClient(this.httpBackend);\r\n    return this.httpClient.post(`${API_BASE_URL}/api/routerlogger`, logMsg, {\r\n      headers: new HttpHeaders().set('content-type', 'text/plain'),\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { TeamSizeValidatorDirective } from '../directives/team-size-validator.directive';\r\nimport { ClientLocationStatusValidatorDirective } from '../directives/client-location-status-validator.directive';\r\nimport { ProjectIDUniqueValidatorDirective } from '../directives/project-idunique-validator.directive';\r\nimport { ComponentLoaderDirective } from '../directives/component-loader.directive';\r\nimport { NumberToWordsPipe } from '../pipes/number-to-words.pipe';\r\nimport { FilterPipe } from '../pipes/filter.pipe';\r\nimport { PagingPipe } from '../pipes/paging.pipe';\r\nimport { SortPipe } from '../pipes/sort.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TeamSizeValidatorDirective,\r\n    ClientLocationStatusValidatorDirective,\r\n    ProjectIDUniqueValidatorDirective,\r\n    ComponentLoaderDirective,\r\n    NumberToWordsPipe,\r\n    FilterPipe,\r\n    PagingPipe,\r\n    SortPipe,\r\n  ],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, HttpClientModule],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n\r\n    TeamSizeValidatorDirective,\r\n    ClientLocationStatusValidatorDirective,\r\n    ProjectIDUniqueValidatorDirective,\r\n    ComponentLoaderDirective,\r\n    NumberToWordsPipe,\r\n    FilterPipe,\r\n    PagingPipe,\r\n    SortPipe,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["PreloadAllModules","RouterModule","LoginComponent","SignUpComponent","AboutComponent","MyProfileComponent","loggedInGuard","canDeactivateGuard","routes","path","redirectTo","pathMatch","component","canActivate","canDeactivate","loadChildren","then","m","AdminModule","EmployeeModule","AppRoutingModule","forRoot","useHash","preloadingStrategy","imports","i1","exports","NavigationEnd","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","_c1","_c2","_c3","_c4","_c5","_c6","ɵɵlistener","AppComponent_ng_container_14_Template_a_click_5_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","loginService","Logout","_c7","ɵɵtextInterpolate","ctx_r3","currentUserName","AppComponent","constructor","routerLoggerService","router","ngOnInit","detectIfAlreadyLoggedIn","events","subscribe","event","userName","logMsg","Date","toLocaleString","url","log","ɵɵdirectiveInject","LoginService","i2","RouterLoggerService","i3","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AppComponent_ng_container_7_Template","AppComponent_ng_container_8_Template","AppComponent_ng_container_9_Template","AppComponent_ng_container_14_Template","currentUserRole","_c8","BrowserModule","JwtModule","HTTP_INTERCEPTORS","AlertDirective","SharedModule","JwtInterceptorService","JwtUnauthorizedInterceptorService","AppModule","bootstrap","provide","useClass","multi","config","tokenGetter","sessionStorage","getItem","JSON","parse","token","declarations","CountriesCacheService","cache","Map","set","key","data","get","clear","factory","ɵfac","providedIn","EmployeesCacheService","ProjectsCacheService","TasksCacheService","AboutComponent_Template","take","ctx_r1","loginError","loginViewModel","onLoginClick","loginForm","valid","Login","pipe","next","navigate","error","console","viewQuery","LoginComponent_Query","LoginComponent_div_8_Template","LoginComponent_Template_input_ngModelChange_14_listener","$event","LoginComponent_Template_input_ngModelChange_19_listener","password","LoginComponent_Template_button_click_21_listener","user","split","MyProfileComponent_Template","ɵɵtextInterpolate1","FormControl","FormGroup","Validators","gender_r20","country_r21","countryID","countryName","SignUpComponent_div_85_Template_button_click_16_listener","restoredCtx","_r25","i_r23","index","ctx_r24","onRemoveSkill","ɵɵpureFunction2","skill_r22","invalid","dirty","touched","ctx_r19","signUpForm","submitted","countriesService","formBuilder","customValidatorsService","genders","countries","getCountries","group","personName","firstName","required","minLength","lastName","updateOn","email","validators","asyncValidators","DuplicateEmailValidator","mobile","pattern","dateOfBirth","minimumAgeValidator","maxLength","confirmPassword","gender","receiveNewsLetters","skills","array","compareValidator","onSubmitClick","signUpViewModel","value","Register","registerError","onAddSkill","formGroup","skillName","skillLevel","push","removeAt","CountriesService","FormBuilder","CustomValidatorsService","i4","i5","SignUpComponent_Template","SignUpComponent_Template_form_ngSubmit_2_listener","SignUpComponent_span_13_Template","SignUpComponent_span_14_Template","SignUpComponent_span_20_Template","SignUpComponent_span_21_Template","SignUpComponent_span_27_Template","SignUpComponent_span_28_Template","SignUpComponent_span_29_Template","SignUpComponent_span_35_Template","SignUpComponent_span_36_Template","SignUpComponent_span_42_Template","SignUpComponent_span_43_Template","SignUpComponent_span_49_Template","SignUpComponent_span_50_Template","SignUpComponent_span_56_Template","SignUpComponent_span_57_Template","SignUpComponent_div_62_Template","SignUpComponent_span_63_Template","SignUpComponent_option_71_Template","SignUpComponent_span_73_Template","SignUpComponent_div_85_Template","SignUpComponent_Template_button_click_86_listener","errors","minlength","uniqueEmail","minAge","maxlength","ɵɵpipeBind1","controls","elementRef","renderer2","divElement","createElement","setAttribute","setStyle","spanElement","spanText","createText","appendChild","nativeElement","title","onMouseEnter","onMouseLeave","ElementRef","Renderer2","hostVars","hostBindings","AlertDirective_HostBindings","AlertDirective_mouseleave_HostBindingHandler","NG_VALIDATORS","ClientLocationStatusValidatorDirective","validate","control","isValid","clientLocationID","status","clientLocationStatus","features","ɵɵProvidersFeature","useExisting","ComponentLoaderDirective","viewContainerRef","ViewContainerRef","NG_ASYNC_VALIDATORS","map","ProjectIDUniqueValidatorDirective","projectsService","getProjectByProjectID","projectExists","uniqueProjectID","ProjectsService","TeamSizeValidatorDirective","currentValue","appTeamSizeValidator","divisible","inputs","route","state","pristine","confirm","inject","isAuthenticated","intercept","request","currentUser","clone","setHeaders","Authorization","body","teamSize","handle","HttpErrorResponse","HttpResponse","tap","req","alert","FilterPipe","transform","searchBy","searchText","resultArray","item","String","toLowerCase","startsWith","indexOf","w","includes","pure","NumberToWordsPipe","inWords","n","a","b","g","arr","x","Array","from","num","Number","str","isEmpty","xs","length","slice","drop","reverse","comp","f","not","chunk","makeGroup","ones","tens","huns","join","thousand","i","filter","trim","separators","PagingPipe","currentPageIndex","pageSize","SortPipe","sortBy","sortOrder","sort","toString","of","API_BASE_URL","httpClient","cacheService","cachedData","responseType","getCountryByCountryID","insertCountry","newCountry","post","updateCountry","existingCountry","put","deleteCountry","delete","ɵɵinject","HttpClient","today","diffMilliSeconds","getTime","diffYears","controlToValidate","controlToCompare","setErrors","getUserByEmail","existingUser","httpBackend","jwtHelperService","employeesCacheService","tasksCacheService","observe","response","role","stringify","isTokenExpired","removeItem","getEmployees","HttpBackend","JwtHelperService","getProjects","projectID","el","searchProjects","filteredCache","projectName","dateOfStart","insertProject","newProject","updateProject","existingProject","deleteProject","HttpHeaders","headers","CommonModule","FormsModule","ReactiveFormsModule","HttpClientModule","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}